# Virtual Enviornment install 

-> pip install virtualenvwrapper-win
-> mkvirtualenv inmakes ('inmakes' = virtual enviornment name)
-> workon inmakes (open virtual enviornment)
-> pip install django

# Create Project

-> django-admin startproject travelproject ('travelproject' = project name)
-> cd travelproject

# Create App

-> python manage.py startapp travelapp ('travelapp' = project name)

# Run Server

-> python manage.py runserver

--------------------------------------------------------------------------------------------

Django works on MVT Architecture

Model - Table Name
View - Code
Template - HTML Code

# Project Files

Project -> urls.py ->

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('travelapp.urls'))
]



Create a new file in application folder and name it 'urls.py'

App -> urls.py

from django.urls import path, include
from . import views

urlpatterns = [
    path('',views.demo, name='demo'),
]



Create a new function in 'views.py

Return an HTML Response

from django.http import HttpResponse
from django.shortcuts import render

def demo(request):
    return HttpResponse("HelloWorld")


Returning an HTML Page -> views

def demo(request):
    return render(request,"index.html")


Add name of app in Settings.py->INSTALLED_APPS

INSTALLED_APPS = [
    'travelapp',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


'Settings.py' ->

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



--------------------------------------------------------------------------------------------


Navigating from one page to another

App -> urls.py

urlpatterns = [
    path('',views.demo, name='demo'),
    path('about/',views.about,name='about'),
]

App -> views.py

def about(request):
    return render(request,'about.html')

templates -> create a new html page 'about.html'


--------------------------------------------------------------------------------------------

Passing Value to HTML

views.py ->

def demo(request):
    name="India"
    return render(request,"index.html",{'obj':name})

index.html ->

<h1>Hello {{obj}}</h1>

--------------------------------------------------------------------------------------------

Passing Value from one page to another

index.html ->

<form action="add/" method="get">
    <input type="text" name="num1" placeholder="Number 1">
    <input type="text" name="num2" placeholder="Number 2">
    <input type="submit">
</form>

urls.py ->

urlpatterns = [
    path('',views.demo, name='demo'),
    path('about/',views.about,name='about'),
    path('add/',views.add,name='add'),
]


views.py ->

def add(request):
    x = int(request.GET['num1'])
    y = int(request.GET['num2'])
    res=x+y
    return render(request,"result.html",{'result':res})

result.html ->

<h1>Result: {{result}}</h1>

--------------------------------------------------------------------------------------------

Static Websites

Move all resources from template to a new directory 'static' in the project folder
Move Index page from template to 'templates' directory

settings.py -> STATIC_URL

STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')
MEDIA_URL = '/media'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

Project -> urls.py -> urlpatterns

from django.conf.urls.static import static

if settings.DEBUG:
    urlpatterns += static(settings.STATIC_URL,document_root=settings.STATIC_ROOT)
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


index.html ->


load static at the beginning of the page

{% load static %}
<!DOCTYPE html>


Make changes to all plugins, styles and images to load static

Opener: 
{% static '

Closing: 
' %}

Use inside the double quotes

Example: <link rel="stylesheet" type="text/css" href="{% static 'styles/bootstrap4/bootstrap.min.css' %}">


--------------------------------------------------------------------------------------------


Adding Images from a Database



Create Database 

Project -> models.py

class Place(models.Model):
    name = models.CharField(max_length=250)
    image=models.ImageField(upload_to='pics')
    description=models.TextField()

Always run the below two commands when any changes are made in models.py

python manage.py makemigrations
python manage.py migrate


Project ->settings.py -> DATABASES

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'travelproject',
        'USER': 'root',
        'PASSWORD': '',
    }
}

Always run the below two commands when any changes are made in models.py

python manage.py makemigrations
python manage.py migrate

--------------------------------------------------------------------------------------------


Django Admin Panel


Create Superuser for Admin panel

-> python manage.py createsuperuser

App -> admin.py

from . models import Place
admin.site.register(Place)

--------------------------------------------------------------------------------------------

Dynamic Data passing in HTML (ORM)


views.py ->

from . models import Place

def demo(request):
    obj=Place.objects.all()
    return render(request,"index.html",{'result':obj})

index.html ->

use for loop
add .url to image

				
				<!-- Why item -->
				{% for i in result %}
				<div class="col-lg-4 why_col">
					<div class="why_item">
						<div class="why_image">
							<img src="{{i.image.url}}" alt="">
							<div class="why_icon d-flex flex-column align-items-center justify-content-center">
								<img src="{% static 'images/why_1.svg' %}" alt="">
							</div>
						</div>
						<div class="why_content text-center">
							<div class="why_title">{{i.name}}</div>
							<div class="why_text">
								<p>{{i.description}}</p>
							</div>
						</div>
					</div>
				</div>
				{% endfor %}

